<?php

/**
 * This module creates Canadian (CDN) Tax Receipts for charitable donations.
 *     
 * Please see README.txt
 *
 * We hope you'll find this useful - no guarantees of any kind though. 
 *
 * originally Contributed by PeaceWorks Computer Consulting
 * http://www.peaceworks.ca
 *
 * modifications by Semper IT inc. - Karin Gerritsen - May-Sep 2011
 * karin@semper-it.com
 */

require_once('civicrm_cdntaxreceipts.inc');

/**
 * Implements hook_civicrm_buildform().
 * 
 * Injects elements into a form being built so we can issue 
 * a tax reciept from the admin interface.
 * 
 */

function civicrm_cdntaxreceipts_civicrm_buildForm( $formName, &$form ) {

    if ( is_a( $form, 'CRM_Contribute_Form_ContributionView' ) ) {

        // add "Issue Tax Receipt" button to the "View Contribution" page
        // NOTE: in Firefox display ok; in Chrome/Safari: padding top/bottom missing (ie smaller buttons)
        // completely functional though.

        $buttons = array( array ( 'type'      => 'submit',  
                                  'subName'   => 'send_receipt',
                                  'name'      => ts('Issue Tax Receipt'),  
                                  'isDefault' => false ), );

        $form->addButtons( $buttons );
    }
}

/**
 * Implements hook_civicrm_postProcess().
 * 
 * Called when a form comes back for processing. Basically, we want to process
 * the button we added in civicrm_cdntaxreceipts_civicrm_buildForm().
 * 
 */

function civicrm_cdntaxreceipts_civicrm_postProcess( $formName, &$form ) {

    if ( ! is_a( $form, 'CRM_Contribute_Form_ContributionView' ) ) return;

    // get the contribution
    $contributionId = $form->get( 'id' );
    $contribution = & new CRM_Contribute_DAO_Contribution();
    $contribution->id = $contributionId;

    if ( ! $contribution->find( true ) ) {
        CRM_Core_Error::fatal( "Could not retrieve details for this contribution" );
        return;
    }

    // check the contribution is receiptable
    $contributionType = & new CRM_Contribute_DAO_ContributionType();
    $contributionType->id = $contribution->contribution_type_id;
    if ( ! $contributionType->find( true ) ) {
        CRM_Core_Error::fatal( "Could not find corresponding contribution type." );
    }

    // check if it's the original receipt or a duplicate
    $original_receipt = ! cdntaxreceipts_taxReceiptSent( $contribution );

    if ( $contributionType->is_deductible ) {
        // print the receipt or send it, depending on which button was submitted
        if ( $original_receipt ) cdntaxreceipts_recordTaxReceipt( $contribution );

        if ( $_POST['_qf_ContributionView_submit_send_receipt'] == 'Issue Tax Receipt' ) {
            cdntaxreceipts_sendTaxReceipt( $contribution, $original_receipt );
            cdntaxreceipts_generateTaxReceipt( $contribution, $original_receipt, $print_instead_of_email=true );
         }

    } else {
        $statusMsg = ts('This contribution is not tax deductible. No receipt has been issued.');
        CRM_Core_Session::setStatus( $statusMsg );
    }
}

/**
 * Drupal configuration
 * (CiviCRM doesn't let us dynamically inject fields into templates.  Avoid forcing template changes
 * during installation by moving configuration to the Drupal side.)
 */

function civicrm_cdntaxreceipts_menu()
{
  $items = array();
  $items['admin/settings/cdntaxreceipts'] = array(
    'title' => 'CiviCRM CDN Tax Receipts',
    'description' => 'Configure CDN Tax Receipts for CiviCRM',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('civicrm_cdntaxreceipts_admin_form'),
    'access arguments' => array('administer CiviCRM'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function civicrm_cdntaxreceipts_admin_form()
{
  $form = array();

  $form['org'] = array(
    '#type' => 'fieldset',
    '#title' => t('Organization details'),
  );
  $form['org']['cdntaxreceipts_org_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Organization Name'),
    '#size' => 50,
    '#default_value' => variable_get('cdntaxreceipts_org_name', ''),
    '#maxlength' => 50,
    '#required' => TRUE,
  );
  $form['org']['cdntaxreceipts_address_line1'] = array(
    '#type' => 'textfield',
    '#title' => t('Address Line 1'),
    '#size' => 50,
    '#maxlength' => 50,
    '#default_value' => variable_get('cdntaxreceipts_address_line1', ''),
    '#description' => '101 Anywhere Drive',
    '#required' => TRUE,
  );
  $form['org']['cdntaxreceipts_address_line2'] = array(
    '#type' => 'textfield',
    '#title' => t('Address Line 2'),
    '#size' => 50,
    '#maxlength' => 50,
    '#default_value' => variable_get('cdntaxreceipts_address_line2', ''),
    '#description' => 'Toronto ON A1B 2C3',
    '#required' => TRUE,
  );
  $form['org']['cdntaxreceipts_tel'] = array(
    '#type' => 'textfield',
    '#title' => t('Telephone'),
    '#size' => 16,
    '#maxlength' => 16,
    '#default_value' => variable_get('cdntaxreceipts_tel', ''),
    '#description' => '(555) 555-5555',
    '#required' => TRUE,
  );
  $form['org']['cdntaxreceipts_fax'] = array(
    '#type' => 'textfield',
    '#title' => t('Fax'),
    '#size' => 16,
    '#maxlength' => 16,
    '#default_value' => variable_get('cdntaxreceipts_fax', ''),
    '#description' => '(555) 555-5555',
    '#required' => TRUE,
  );
  $form['org']['cdntaxreceipts_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#size' => 40,
    '#maxlength' => 40,
    '#default_value' => variable_get('cdntaxreceipts_email', ''),
    '#description' => 'info@my.org',
    '#required' => TRUE,
  );
  $form['org']['cdntaxreceipts_web'] = array(
    '#type' => 'textfield',
    '#title' => t('Website'),
    '#size' => 40,
    '#maxlength' => 40,
    '#default_value' => variable_get('cdntaxreceipts_web', ''),
    '#description' => 'www.my.org',
    '#required' => TRUE,
  );
  $form['org']['cdntaxreceipts_charitable_no'] = array(
    '#type' => 'textfield',
    '#title' => t('Charitable Registration Number'),
    '#size' => 20,
    '#maxlength' => 20,
    '#default_value' => variable_get('cdntaxreceipts_charitable_no', ''),
    '#description' => '10000-000-RR0000',
    '#required' => TRUE,
  );

  $form['receipt'] = array(
    '#type' => 'fieldset',
    '#title' => t('Receipt configuration'),
  );
  $form['receipt']['cdntaxreceipts_prefix'] = array(
    '#type' => 'textfield',
    '#title' => t('Receipt Prefix'),
    '#size' => 10,
    '#maxlength' => 10,
    '#default_value' => variable_get('cdntaxreceipts_prefix', 'WEB-'),
    '#description' => t('Receipt numbers are formed by appending the CiviCRM Contribution ID to this prefix. Receipt numbers must be unique within your organization.'),
    '#required' => TRUE,
  );
  $form['#attributes'] = array('enctype' => "multipart/form-data");
  $form['receipt']['cdntaxreceipts_logo'] = array(
    '#type' => 'file',
    '#title' => t('Logo'),
    '#size' => 60,
    '#description' => 'Logo size: 280x120 pixels.',
//    '#required' => TRUE,
  );
  $form['receipt']['cdntaxreceipts_signature'] = array(
    '#type' => 'file',
    '#title' => t('Signature'),
    '#size' => 60,
    '#description' => 'Signature size: 141x58 pixels.',
//    '#required' => TRUE,
  );
  $form['receipt']['cdntaxreceipts_bg'] = array(
    '#type' => 'file',
    '#title' => t('Background Image'),
    '#size' => 60,
    '#description' => 'Watermark Image size: 250x250 pixels.',
  );

/**
 * Create an Email message fieldset to gather info about the Email message to accompany the Tax Receipt
 *
*/ 

  $form['message'] = array(
    '#type' => 'fieldset',
    '#title' => t('Email message'),
  );
  $form['message']['cdntaxreceipts_subject'] = array(
   '#type' => 'textfield',
   '#title' => t('Email Subject'),
   '#size' => 50,
   '#maxlength' => 50,
   '#default_value' => variable_get('cdntaxreceipts_subject', 'Your Tax Receipt'),
   '#description' => t('Subject of the Email to accompany your Tax Receipt. The receipt number will be appended.'),
   '#required' => TRUE,
  );
  $form['message']['cdntaxreceipts_from'] = array(
   '#type' => 'textfield',
   '#title' => t('Email From'),
   '#size' => 50,
   '#maxlength' => 50,
   '#default_value' => variable_get('cdntaxreceipts_from', ''),
   '#description' => t('Address you would like to Email the Tax Receipt from.'),
   '#required' => TRUE,
  );
  $form['message']['cdntaxreceipts_archive'] = array(
   '#type' => 'textfield',
   '#title' => t('Archive Email'),
   '#size' => 50,
   '#maxlength' => 50,
   '#default_value' => variable_get('cdntaxreceipts_archive', ''),
   '#description' => t('Address you would like to Send a copy of the Email containing the Tax Receipt to. This is useful to create and archive.'),
   '#required' => TRUE,
  );
  $form['message']['cdntaxreceipts_message'] = array(
   '#type' => 'textarea',
   '#title' => t('Email Message'),
   '#size' => 1000,
   '#maxlength' => 1000,
   '#default_value' => variable_get('cdntaxreceipts_message', 'Attached please find your official tax receipt for income tax purposes'),
   '#description' => t('Text in the Email to accompany your Tax Receipt.'),
   '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save configuration'),
  );

  return $form;
}

function civicrm_cdntaxreceipts_admin_form_submit($form, &$form_state)
{
  // save data to Drupal vars
  foreach ( $form_state['values'] as $key => $value ) {
    if ( $key != 'cdntaxreceipts_logo' && $key != 'cdntaxreceipts_signature' && $key != 'cdntaxreceipts_bg' ) {
      variable_set($key, $value);
    }
  }

  // save logo, signature and background files
  foreach ( array('cdntaxreceipts_logo', 'cdntaxreceipts_signature', 'cdntaxreceipts_bg') as $key ) {
    if ( is_uploaded_file( $_FILES['files']['tmp_name'][$key] ) ) {
      $mypath = conf_path().'/files';
      $directory = variable_get('file_system_path',$mypath);

      $validators = array( 'file_validate_is_image' => array() );
      $file = file_save_upload( $key, $validators, $directory, FILE_EXISTS_REPLACE );

      if ( $file ) {
        file_set_status( $file, FILE_STATUS_PERMANENT );
        $filepath = $directory . '/' . $file->filename;
        variable_set( $key, $filepath );
        drupal_set_message( 'Uploaded file to ' . $filepath );
      } else {
        drupal_set_message( 'Error uploading the file.' );
      }
    }
  }
}

/**
 * Implementation of hook_cron()
 *
 * To clean up PDF files that are hanging around in the temp directory...
 */

function civicrm_cdntaxreceipts_cron()
{
    $temp_dir = file_directory_temp();
    $files = $temp_dir . '/pdf-receipt-*.pdf';

    foreach ( glob( $files ) as $f ) {
       unlink( $f );
    }
}

